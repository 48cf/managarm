name: CI

on:
  push:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
    build-package:
        strategy:
            matrix:
                include:
                  - pkg: managarm-kernel
                  - pkg: managarm-system
        name: Build ${{ matrix.pkg }}
        runs-on: ubuntu-24.04
        steps:
          - name: Permit unprivileged user namespaces
            run: |
                set -x
                sudo sysctl -w kernel.apparmor_restrict_unprivileged_unconfined=0
                sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0
          - name: Install prerequisites
            run: |
                set -x
                sudo apt-get update
                sudo apt-get install qemu-system-x86 pcre2-utils
                pip3 install xbstrap y4
                xbstrap prereqs cbuildrt xbps
          - name: Check for requested bootstrap-managarm PR
            env:
              PR_BODY: ${{ github.event.pull_request.body }}
            run: |
              pr_num=$(echo "$PR_BODY" | pcre2grep -o1 "^Depends on managarm\/bootstrap-managarm#([0-9]+)" | head -n1)
              pr_ref=""
              if [ ! -z "${pr_num}" ]; then
                pr_ref="refs/pull/$pr_num/head"
              fi
              echo "bootstrap_ref=${pr_ref}" >> "$GITHUB_ENV"
          - name: Checkout bootstrap-managarm
            uses: actions/checkout@v2
            with:
                repository: managarm/bootstrap-managarm
                ref: ${{env.bootstrap_ref}}
                path: src/
          - name: Checkout Managarm
            uses: actions/checkout@v2
            with:
                path: src/managarm/
                fetch-depth: 0
          - name: Download rootfs
            run: |
                set -x
                curl -o rootfs.tar.gz https://repos.managarm.org/buildenv/managarm-buildenv.tar.gz
                tar -xzf rootfs.tar.gz
          - name: Prepare src/ and build/
            run: |
                set -x
                touch src/managarm/checkedout.xbstrap
                mkdir build/
                cat << EOF > build/bootstrap-site.yml
                    auto_pull: true

                    define_options:
                        arch: x86_64
                        arch-triple: x86_64-managarm

                    pkg_management:
                        format: xbps

                    container:
                        runtime: cbuildrt
                        rootfs:  ../rootfs
                        uid: 1000
                        gid: 1000
                        src_mount: /var/lib/managarm-buildenv/src
                        build_mount: /var/lib/managarm-buildenv/build
                        allow_containerless: true
                EOF
          - name: Build ${{ matrix.pkg }} package
            run: |
                set -x
                xbstrap init ../src
                xbstrap pack $CI_BUILD_PKG
            env:
                CI_BUILD_PKG: ${{ matrix.pkg }}
            working-directory: build/
          - name: Generate image
            run: |
                set -x
                curl -o image.xz https://builds.managarm.org/repos/files/managarm/latest/image.xz
                unxz image.xz
                ../src/scripts/update-image.py -m loopback mount
                # For now we need root because the mount point is owned by root
                # and xbps uses access(mountpoint/, W_OK) to test if it can write.
                sudo --preserve-env=XBPS_ARCH ~/.xbstrap/bin/xbps-install -fy -R xbps-repo/ -r mountpoint/ $CI_BUILD_PKG
                ../src/scripts/update-image.py unmount
            env:
                CI_BUILD_PKG: ${{ matrix.pkg }}
                XBPS_ARCH: x86_64
            working-directory: build/
          - name: Test ${{ matrix.pkg }} package
            run: |
                ../src/scripts/test-image.py
            working-directory: build/
          - name: Run clang-tidy on ${{ matrix.pkg }}
            run: |
                xbstrap run --pkg $CI_BUILD_PKG clang-tidy
            working-directory: build/
            env:
                CI_BUILD_PKG: ${{ matrix.pkg }}
