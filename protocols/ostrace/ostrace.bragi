namespace "managarm::ostrace";

// Records stored in the output file.

group {

message Definition 1 {
head(8):
tail:
	uint64 id;
	string name;
}

message EndOfRecord 2 {
head(8):
}

message EventRecord 3 {
head(8):
tail:
	uint64 id;
	uint64 ts; // Timestamp in nanoseconds.
}

message UintAttribute 32 {
head(8):
tail:
	uint64 id;
	uint64 v;
}

message BufferAttribute 33 {
head(8):
tail:
	uint64 id;
	byte[] buffer;
}

}

// Messages of the IPC protocol.
enum Error {
	SUCCESS = 0,
	ILLEGAL_REQUEST = 1,
	OSTRACE_GLOBALLY_DISABLED = 2
}

group {

message NegotiateReq 1 {
head(128):
}

message EmitReq 2 {
head(128):
	uint64 size;
}

// TODO(AvdG): in the future, we want each source to emit its definitions independently
//             from other sources. This can be done by adding source IDs to the record header.
message AnnounceItemReq 3 {
head(128):
	string name;
}

}

group {

message Response 1 {
head(32):
	Error error;
	uint64 id;
}

}
