// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: char_device.proto

#ifndef PROTOBUF_char_5fdevice_2eproto__INCLUDED
#define PROTOBUF_char_5fdevice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace managarm {
namespace char_device {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_char_5fdevice_2eproto();
void protobuf_AssignDesc_char_5fdevice_2eproto();
void protobuf_ShutdownFile_char_5fdevice_2eproto();

class ClientRequest;

// ===================================================================

class ClientRequest : public ::google::protobuf::MessageLite {
 public:
  ClientRequest();
  virtual ~ClientRequest();

  ClientRequest(const ClientRequest& from);

  inline ClientRequest& operator=(const ClientRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ClientRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ClientRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ClientRequest* other);

  // implements Message ----------------------------------------------

  inline ClientRequest* New() const { return New(NULL); }

  ClientRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ClientRequest& from);
  void MergeFrom(const ClientRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string chars = 1;
  bool has_chars() const;
  void clear_chars();
  static const int kCharsFieldNumber = 1;
  const ::std::string& chars() const;
  void set_chars(const ::std::string& value);
  void set_chars(const char* value);
  void set_chars(const char* value, size_t size);
  ::std::string* mutable_chars();
  ::std::string* release_chars();
  void set_allocated_chars(::std::string* chars);

  // @@protoc_insertion_point(class_scope:managarm.char_device.ClientRequest)
 private:
  inline void set_has_chars();
  inline void clear_has_chars();

  ::std::string _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chars_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_char_5fdevice_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_char_5fdevice_2eproto();
  #endif
  friend void protobuf_AssignDesc_char_5fdevice_2eproto();
  friend void protobuf_ShutdownFile_char_5fdevice_2eproto();

  void InitAsDefaultInstance();
  static ClientRequest* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientRequest

// optional string chars = 1;
inline bool ClientRequest::has_chars() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientRequest::set_has_chars() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientRequest::clear_has_chars() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientRequest::clear_chars() {
  chars_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chars();
}
inline const ::std::string& ClientRequest::chars() const {
  // @@protoc_insertion_point(field_get:managarm.char_device.ClientRequest.chars)
  return chars_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientRequest::set_chars(const ::std::string& value) {
  set_has_chars();
  chars_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:managarm.char_device.ClientRequest.chars)
}
inline void ClientRequest::set_chars(const char* value) {
  set_has_chars();
  chars_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:managarm.char_device.ClientRequest.chars)
}
inline void ClientRequest::set_chars(const char* value, size_t size) {
  set_has_chars();
  chars_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:managarm.char_device.ClientRequest.chars)
}
inline ::std::string* ClientRequest::mutable_chars() {
  set_has_chars();
  // @@protoc_insertion_point(field_mutable:managarm.char_device.ClientRequest.chars)
  return chars_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientRequest::release_chars() {
  clear_has_chars();
  return chars_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientRequest::set_allocated_chars(::std::string* chars) {
  if (chars != NULL) {
    set_has_chars();
  } else {
    clear_has_chars();
  }
  chars_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chars);
  // @@protoc_insertion_point(field_set_allocated:managarm.char_device.ClientRequest.chars)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace char_device
}  // namespace managarm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_char_5fdevice_2eproto__INCLUDED
