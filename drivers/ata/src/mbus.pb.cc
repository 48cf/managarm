// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mbus.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mbus.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace managarm {
namespace mbus {

void protobuf_ShutdownFile_mbus_2eproto() {
  delete Capability::default_instance_;
  delete Interface::default_instance_;
  delete CntRequest::default_instance_;
  delete SvrResponse::default_instance_;
  delete SvrRequest::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_mbus_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_mbus_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  Capability::default_instance_ = new Capability();
  Interface::default_instance_ = new Interface();
  CntRequest::default_instance_ = new CntRequest();
  SvrResponse::default_instance_ = new SvrResponse();
  SvrRequest::default_instance_ = new SvrRequest();
  Capability::default_instance_->InitAsDefaultInstance();
  Interface::default_instance_->InitAsDefaultInstance();
  CntRequest::default_instance_->InitAsDefaultInstance();
  SvrResponse::default_instance_->InitAsDefaultInstance();
  SvrRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mbus_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_mbus_2eproto_once_);
void protobuf_AddDesc_mbus_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_mbus_2eproto_once_,
                 &protobuf_AddDesc_mbus_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mbus_2eproto {
  StaticDescriptorInitializer_mbus_2eproto() {
    protobuf_AddDesc_mbus_2eproto();
  }
} static_descriptor_initializer_mbus_2eproto_;
#endif
bool CntReqType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

bool SvrReqType_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Capability::kNameFieldNumber;
#endif  // !_MSC_VER

Capability::Capability()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:managarm.mbus.Capability)
}

void Capability::InitAsDefaultInstance() {
}

Capability::Capability(const Capability& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:managarm.mbus.Capability)
}

void Capability::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Capability::~Capability() {
  // @@protoc_insertion_point(destructor:managarm.mbus.Capability)
  SharedDtor();
}

void Capability::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Capability::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Capability& Capability::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_mbus_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_mbus_2eproto();
#endif
  return *default_instance_;
}

Capability* Capability::default_instance_ = NULL;

Capability* Capability::New(::google::protobuf::Arena* arena) const {
  Capability* n = new Capability;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Capability::Clear() {
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool Capability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:managarm.mbus.Capability)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:managarm.mbus.Capability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:managarm.mbus.Capability)
  return false;
#undef DO_
}

void Capability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:managarm.mbus.Capability)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:managarm.mbus.Capability)
}

int Capability::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Capability::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Capability*>(&from));
}

void Capability::MergeFrom(const Capability& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void Capability::CopyFrom(const Capability& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Capability::IsInitialized() const {

  return true;
}

void Capability::Swap(Capability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Capability::InternalSwap(Capability* other) {
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Capability::GetTypeName() const {
  return "managarm.mbus.Capability";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Capability

// optional string name = 1;
bool Capability::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Capability::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Capability::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Capability::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Capability::name() const {
  // @@protoc_insertion_point(field_get:managarm.mbus.Capability.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Capability::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:managarm.mbus.Capability.name)
}
 void Capability::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:managarm.mbus.Capability.name)
}
 void Capability::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:managarm.mbus.Capability.name)
}
 ::std::string* Capability::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:managarm.mbus.Capability.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Capability::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Capability::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:managarm.mbus.Capability.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Interface::kNameFieldNumber;
#endif  // !_MSC_VER

Interface::Interface()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:managarm.mbus.Interface)
}

void Interface::InitAsDefaultInstance() {
}

Interface::Interface(const Interface& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:managarm.mbus.Interface)
}

void Interface::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Interface::~Interface() {
  // @@protoc_insertion_point(destructor:managarm.mbus.Interface)
  SharedDtor();
}

void Interface::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Interface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Interface& Interface::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_mbus_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_mbus_2eproto();
#endif
  return *default_instance_;
}

Interface* Interface::default_instance_ = NULL;

Interface* Interface::New(::google::protobuf::Arena* arena) const {
  Interface* n = new Interface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Interface::Clear() {
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:managarm.mbus.Interface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:managarm.mbus.Interface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:managarm.mbus.Interface)
  return false;
#undef DO_
}

void Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:managarm.mbus.Interface)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:managarm.mbus.Interface)
}

int Interface::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Interface::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Interface*>(&from));
}

void Interface::MergeFrom(const Interface& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void Interface::CopyFrom(const Interface& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Interface::IsInitialized() const {

  return true;
}

void Interface::Swap(Interface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Interface::InternalSwap(Interface* other) {
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Interface::GetTypeName() const {
  return "managarm.mbus.Interface";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Interface

// optional string name = 1;
bool Interface::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Interface::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Interface::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Interface::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Interface::name() const {
  // @@protoc_insertion_point(field_get:managarm.mbus.Interface.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Interface::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:managarm.mbus.Interface.name)
}
 void Interface::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:managarm.mbus.Interface.name)
}
 void Interface::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:managarm.mbus.Interface.name)
}
 ::std::string* Interface::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:managarm.mbus.Interface.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Interface::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Interface::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:managarm.mbus.Interface.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CntRequest::kReqTypeFieldNumber;
const int CntRequest::kCapsFieldNumber;
const int CntRequest::kIfsFieldNumber;
const int CntRequest::kObjectIdFieldNumber;
#endif  // !_MSC_VER

CntRequest::CntRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:managarm.mbus.CntRequest)
}

void CntRequest::InitAsDefaultInstance() {
}

CntRequest::CntRequest(const CntRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:managarm.mbus.CntRequest)
}

void CntRequest::SharedCtor() {
  _cached_size_ = 0;
  req_type_ = 1;
  object_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CntRequest::~CntRequest() {
  // @@protoc_insertion_point(destructor:managarm.mbus.CntRequest)
  SharedDtor();
}

void CntRequest::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void CntRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CntRequest& CntRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_mbus_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_mbus_2eproto();
#endif
  return *default_instance_;
}

CntRequest* CntRequest::default_instance_ = NULL;

CntRequest* CntRequest::New(::google::protobuf::Arena* arena) const {
  CntRequest* n = new CntRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CntRequest::Clear() {
  if (_has_bits_[0 / 32] & 9u) {
    req_type_ = 1;
    object_id_ = GOOGLE_LONGLONG(0);
  }
  caps_.Clear();
  ifs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool CntRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:managarm.mbus.CntRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .managarm.mbus.CntReqType req_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::managarm::mbus::CntReqType_IsValid(value)) {
            set_req_type(static_cast< ::managarm::mbus::CntReqType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_caps;
        break;
      }

      // repeated .managarm.mbus.Capability caps = 2;
      case 2: {
        if (tag == 18) {
         parse_caps:
          DO_(input->IncrementRecursionDepth());
         parse_loop_caps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_caps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_caps;
        if (input->ExpectTag(26)) goto parse_loop_ifs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .managarm.mbus.Interface ifs = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ifs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ifs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_ifs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_object_id;
        break;
      }

      // optional int64 object_id = 4;
      case 4: {
        if (tag == 32) {
         parse_object_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &object_id_)));
          set_has_object_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:managarm.mbus.CntRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:managarm.mbus.CntRequest)
  return false;
#undef DO_
}

void CntRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:managarm.mbus.CntRequest)
  // optional .managarm.mbus.CntReqType req_type = 1;
  if (has_req_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->req_type(), output);
  }

  // repeated .managarm.mbus.Capability caps = 2;
  for (unsigned int i = 0, n = this->caps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->caps(i), output);
  }

  // repeated .managarm.mbus.Interface ifs = 3;
  for (unsigned int i = 0, n = this->ifs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->ifs(i), output);
  }

  // optional int64 object_id = 4;
  if (has_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->object_id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:managarm.mbus.CntRequest)
}

int CntRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 9u) {
    // optional .managarm.mbus.CntReqType req_type = 1;
    if (has_req_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->req_type());
    }

    // optional int64 object_id = 4;
    if (has_object_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->object_id());
    }

  }
  // repeated .managarm.mbus.Capability caps = 2;
  total_size += 1 * this->caps_size();
  for (int i = 0; i < this->caps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->caps(i));
  }

  // repeated .managarm.mbus.Interface ifs = 3;
  total_size += 1 * this->ifs_size();
  for (int i = 0; i < this->ifs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ifs(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CntRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CntRequest*>(&from));
}

void CntRequest::MergeFrom(const CntRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  caps_.MergeFrom(from.caps_);
  ifs_.MergeFrom(from.ifs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_req_type()) {
      set_req_type(from.req_type());
    }
    if (from.has_object_id()) {
      set_object_id(from.object_id());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void CntRequest::CopyFrom(const CntRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CntRequest::IsInitialized() const {

  return true;
}

void CntRequest::Swap(CntRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CntRequest::InternalSwap(CntRequest* other) {
  std::swap(req_type_, other->req_type_);
  caps_.UnsafeArenaSwap(&other->caps_);
  ifs_.UnsafeArenaSwap(&other->ifs_);
  std::swap(object_id_, other->object_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CntRequest::GetTypeName() const {
  return "managarm.mbus.CntRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CntRequest

// optional .managarm.mbus.CntReqType req_type = 1;
bool CntRequest::has_req_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CntRequest::set_has_req_type() {
  _has_bits_[0] |= 0x00000001u;
}
void CntRequest::clear_has_req_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void CntRequest::clear_req_type() {
  req_type_ = 1;
  clear_has_req_type();
}
 ::managarm::mbus::CntReqType CntRequest::req_type() const {
  // @@protoc_insertion_point(field_get:managarm.mbus.CntRequest.req_type)
  return static_cast< ::managarm::mbus::CntReqType >(req_type_);
}
 void CntRequest::set_req_type(::managarm::mbus::CntReqType value) {
  assert(::managarm::mbus::CntReqType_IsValid(value));
  set_has_req_type();
  req_type_ = value;
  // @@protoc_insertion_point(field_set:managarm.mbus.CntRequest.req_type)
}

// repeated .managarm.mbus.Capability caps = 2;
int CntRequest::caps_size() const {
  return caps_.size();
}
void CntRequest::clear_caps() {
  caps_.Clear();
}
 const ::managarm::mbus::Capability& CntRequest::caps(int index) const {
  // @@protoc_insertion_point(field_get:managarm.mbus.CntRequest.caps)
  return caps_.Get(index);
}
 ::managarm::mbus::Capability* CntRequest::mutable_caps(int index) {
  // @@protoc_insertion_point(field_mutable:managarm.mbus.CntRequest.caps)
  return caps_.Mutable(index);
}
 ::managarm::mbus::Capability* CntRequest::add_caps() {
  // @@protoc_insertion_point(field_add:managarm.mbus.CntRequest.caps)
  return caps_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::managarm::mbus::Capability >&
CntRequest::caps() const {
  // @@protoc_insertion_point(field_list:managarm.mbus.CntRequest.caps)
  return caps_;
}
 ::google::protobuf::RepeatedPtrField< ::managarm::mbus::Capability >*
CntRequest::mutable_caps() {
  // @@protoc_insertion_point(field_mutable_list:managarm.mbus.CntRequest.caps)
  return &caps_;
}

// repeated .managarm.mbus.Interface ifs = 3;
int CntRequest::ifs_size() const {
  return ifs_.size();
}
void CntRequest::clear_ifs() {
  ifs_.Clear();
}
 const ::managarm::mbus::Interface& CntRequest::ifs(int index) const {
  // @@protoc_insertion_point(field_get:managarm.mbus.CntRequest.ifs)
  return ifs_.Get(index);
}
 ::managarm::mbus::Interface* CntRequest::mutable_ifs(int index) {
  // @@protoc_insertion_point(field_mutable:managarm.mbus.CntRequest.ifs)
  return ifs_.Mutable(index);
}
 ::managarm::mbus::Interface* CntRequest::add_ifs() {
  // @@protoc_insertion_point(field_add:managarm.mbus.CntRequest.ifs)
  return ifs_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::managarm::mbus::Interface >&
CntRequest::ifs() const {
  // @@protoc_insertion_point(field_list:managarm.mbus.CntRequest.ifs)
  return ifs_;
}
 ::google::protobuf::RepeatedPtrField< ::managarm::mbus::Interface >*
CntRequest::mutable_ifs() {
  // @@protoc_insertion_point(field_mutable_list:managarm.mbus.CntRequest.ifs)
  return &ifs_;
}

// optional int64 object_id = 4;
bool CntRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CntRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CntRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CntRequest::clear_object_id() {
  object_id_ = GOOGLE_LONGLONG(0);
  clear_has_object_id();
}
 ::google::protobuf::int64 CntRequest::object_id() const {
  // @@protoc_insertion_point(field_get:managarm.mbus.CntRequest.object_id)
  return object_id_;
}
 void CntRequest::set_object_id(::google::protobuf::int64 value) {
  set_has_object_id();
  object_id_ = value;
  // @@protoc_insertion_point(field_set:managarm.mbus.CntRequest.object_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SvrResponse::kObjectIdFieldNumber;
#endif  // !_MSC_VER

SvrResponse::SvrResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:managarm.mbus.SvrResponse)
}

void SvrResponse::InitAsDefaultInstance() {
}

SvrResponse::SvrResponse(const SvrResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:managarm.mbus.SvrResponse)
}

void SvrResponse::SharedCtor() {
  _cached_size_ = 0;
  object_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SvrResponse::~SvrResponse() {
  // @@protoc_insertion_point(destructor:managarm.mbus.SvrResponse)
  SharedDtor();
}

void SvrResponse::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SvrResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SvrResponse& SvrResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_mbus_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_mbus_2eproto();
#endif
  return *default_instance_;
}

SvrResponse* SvrResponse::default_instance_ = NULL;

SvrResponse* SvrResponse::New(::google::protobuf::Arena* arena) const {
  SvrResponse* n = new SvrResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SvrResponse::Clear() {
  object_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool SvrResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:managarm.mbus.SvrResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 object_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &object_id_)));
          set_has_object_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:managarm.mbus.SvrResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:managarm.mbus.SvrResponse)
  return false;
#undef DO_
}

void SvrResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:managarm.mbus.SvrResponse)
  // optional int64 object_id = 1;
  if (has_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->object_id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:managarm.mbus.SvrResponse)
}

int SvrResponse::ByteSize() const {
  int total_size = 0;

  // optional int64 object_id = 1;
  if (has_object_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->object_id());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SvrResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SvrResponse*>(&from));
}

void SvrResponse::MergeFrom(const SvrResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_object_id()) {
      set_object_id(from.object_id());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void SvrResponse::CopyFrom(const SvrResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SvrResponse::IsInitialized() const {

  return true;
}

void SvrResponse::Swap(SvrResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SvrResponse::InternalSwap(SvrResponse* other) {
  std::swap(object_id_, other->object_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SvrResponse::GetTypeName() const {
  return "managarm.mbus.SvrResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SvrResponse

// optional int64 object_id = 1;
bool SvrResponse::has_object_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SvrResponse::set_has_object_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SvrResponse::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SvrResponse::clear_object_id() {
  object_id_ = GOOGLE_LONGLONG(0);
  clear_has_object_id();
}
 ::google::protobuf::int64 SvrResponse::object_id() const {
  // @@protoc_insertion_point(field_get:managarm.mbus.SvrResponse.object_id)
  return object_id_;
}
 void SvrResponse::set_object_id(::google::protobuf::int64 value) {
  set_has_object_id();
  object_id_ = value;
  // @@protoc_insertion_point(field_set:managarm.mbus.SvrResponse.object_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SvrRequest::kReqTypeFieldNumber;
const int SvrRequest::kObjectIdFieldNumber;
const int SvrRequest::kCapsFieldNumber;
const int SvrRequest::kIfsFieldNumber;
#endif  // !_MSC_VER

SvrRequest::SvrRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:managarm.mbus.SvrRequest)
}

void SvrRequest::InitAsDefaultInstance() {
}

SvrRequest::SvrRequest(const SvrRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:managarm.mbus.SvrRequest)
}

void SvrRequest::SharedCtor() {
  _cached_size_ = 0;
  req_type_ = 1;
  object_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SvrRequest::~SvrRequest() {
  // @@protoc_insertion_point(destructor:managarm.mbus.SvrRequest)
  SharedDtor();
}

void SvrRequest::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SvrRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SvrRequest& SvrRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_mbus_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_mbus_2eproto();
#endif
  return *default_instance_;
}

SvrRequest* SvrRequest::default_instance_ = NULL;

SvrRequest* SvrRequest::New(::google::protobuf::Arena* arena) const {
  SvrRequest* n = new SvrRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SvrRequest::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    req_type_ = 1;
    object_id_ = GOOGLE_LONGLONG(0);
  }
  caps_.Clear();
  ifs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool SvrRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:managarm.mbus.SvrRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .managarm.mbus.SvrReqType req_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::managarm::mbus::SvrReqType_IsValid(value)) {
            set_req_type(static_cast< ::managarm::mbus::SvrReqType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_object_id;
        break;
      }

      // optional int64 object_id = 2;
      case 2: {
        if (tag == 16) {
         parse_object_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &object_id_)));
          set_has_object_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_caps;
        break;
      }

      // repeated .managarm.mbus.Capability caps = 3;
      case 3: {
        if (tag == 26) {
         parse_caps:
          DO_(input->IncrementRecursionDepth());
         parse_loop_caps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_caps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_caps;
        if (input->ExpectTag(34)) goto parse_loop_ifs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .managarm.mbus.Interface ifs = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ifs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ifs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_ifs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:managarm.mbus.SvrRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:managarm.mbus.SvrRequest)
  return false;
#undef DO_
}

void SvrRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:managarm.mbus.SvrRequest)
  // optional .managarm.mbus.SvrReqType req_type = 1;
  if (has_req_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->req_type(), output);
  }

  // optional int64 object_id = 2;
  if (has_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->object_id(), output);
  }

  // repeated .managarm.mbus.Capability caps = 3;
  for (unsigned int i = 0, n = this->caps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->caps(i), output);
  }

  // repeated .managarm.mbus.Interface ifs = 4;
  for (unsigned int i = 0, n = this->ifs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->ifs(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:managarm.mbus.SvrRequest)
}

int SvrRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .managarm.mbus.SvrReqType req_type = 1;
    if (has_req_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->req_type());
    }

    // optional int64 object_id = 2;
    if (has_object_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->object_id());
    }

  }
  // repeated .managarm.mbus.Capability caps = 3;
  total_size += 1 * this->caps_size();
  for (int i = 0; i < this->caps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->caps(i));
  }

  // repeated .managarm.mbus.Interface ifs = 4;
  total_size += 1 * this->ifs_size();
  for (int i = 0; i < this->ifs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ifs(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SvrRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SvrRequest*>(&from));
}

void SvrRequest::MergeFrom(const SvrRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  caps_.MergeFrom(from.caps_);
  ifs_.MergeFrom(from.ifs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_req_type()) {
      set_req_type(from.req_type());
    }
    if (from.has_object_id()) {
      set_object_id(from.object_id());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void SvrRequest::CopyFrom(const SvrRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SvrRequest::IsInitialized() const {

  return true;
}

void SvrRequest::Swap(SvrRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SvrRequest::InternalSwap(SvrRequest* other) {
  std::swap(req_type_, other->req_type_);
  std::swap(object_id_, other->object_id_);
  caps_.UnsafeArenaSwap(&other->caps_);
  ifs_.UnsafeArenaSwap(&other->ifs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SvrRequest::GetTypeName() const {
  return "managarm.mbus.SvrRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SvrRequest

// optional .managarm.mbus.SvrReqType req_type = 1;
bool SvrRequest::has_req_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SvrRequest::set_has_req_type() {
  _has_bits_[0] |= 0x00000001u;
}
void SvrRequest::clear_has_req_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void SvrRequest::clear_req_type() {
  req_type_ = 1;
  clear_has_req_type();
}
 ::managarm::mbus::SvrReqType SvrRequest::req_type() const {
  // @@protoc_insertion_point(field_get:managarm.mbus.SvrRequest.req_type)
  return static_cast< ::managarm::mbus::SvrReqType >(req_type_);
}
 void SvrRequest::set_req_type(::managarm::mbus::SvrReqType value) {
  assert(::managarm::mbus::SvrReqType_IsValid(value));
  set_has_req_type();
  req_type_ = value;
  // @@protoc_insertion_point(field_set:managarm.mbus.SvrRequest.req_type)
}

// optional int64 object_id = 2;
bool SvrRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SvrRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SvrRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SvrRequest::clear_object_id() {
  object_id_ = GOOGLE_LONGLONG(0);
  clear_has_object_id();
}
 ::google::protobuf::int64 SvrRequest::object_id() const {
  // @@protoc_insertion_point(field_get:managarm.mbus.SvrRequest.object_id)
  return object_id_;
}
 void SvrRequest::set_object_id(::google::protobuf::int64 value) {
  set_has_object_id();
  object_id_ = value;
  // @@protoc_insertion_point(field_set:managarm.mbus.SvrRequest.object_id)
}

// repeated .managarm.mbus.Capability caps = 3;
int SvrRequest::caps_size() const {
  return caps_.size();
}
void SvrRequest::clear_caps() {
  caps_.Clear();
}
 const ::managarm::mbus::Capability& SvrRequest::caps(int index) const {
  // @@protoc_insertion_point(field_get:managarm.mbus.SvrRequest.caps)
  return caps_.Get(index);
}
 ::managarm::mbus::Capability* SvrRequest::mutable_caps(int index) {
  // @@protoc_insertion_point(field_mutable:managarm.mbus.SvrRequest.caps)
  return caps_.Mutable(index);
}
 ::managarm::mbus::Capability* SvrRequest::add_caps() {
  // @@protoc_insertion_point(field_add:managarm.mbus.SvrRequest.caps)
  return caps_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::managarm::mbus::Capability >&
SvrRequest::caps() const {
  // @@protoc_insertion_point(field_list:managarm.mbus.SvrRequest.caps)
  return caps_;
}
 ::google::protobuf::RepeatedPtrField< ::managarm::mbus::Capability >*
SvrRequest::mutable_caps() {
  // @@protoc_insertion_point(field_mutable_list:managarm.mbus.SvrRequest.caps)
  return &caps_;
}

// repeated .managarm.mbus.Interface ifs = 4;
int SvrRequest::ifs_size() const {
  return ifs_.size();
}
void SvrRequest::clear_ifs() {
  ifs_.Clear();
}
 const ::managarm::mbus::Interface& SvrRequest::ifs(int index) const {
  // @@protoc_insertion_point(field_get:managarm.mbus.SvrRequest.ifs)
  return ifs_.Get(index);
}
 ::managarm::mbus::Interface* SvrRequest::mutable_ifs(int index) {
  // @@protoc_insertion_point(field_mutable:managarm.mbus.SvrRequest.ifs)
  return ifs_.Mutable(index);
}
 ::managarm::mbus::Interface* SvrRequest::add_ifs() {
  // @@protoc_insertion_point(field_add:managarm.mbus.SvrRequest.ifs)
  return ifs_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::managarm::mbus::Interface >&
SvrRequest::ifs() const {
  // @@protoc_insertion_point(field_list:managarm.mbus.SvrRequest.ifs)
  return ifs_;
}
 ::google::protobuf::RepeatedPtrField< ::managarm::mbus::Interface >*
SvrRequest::mutable_ifs() {
  // @@protoc_insertion_point(field_mutable_list:managarm.mbus.SvrRequest.ifs)
  return &ifs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace mbus
}  // namespace managarm

// @@protoc_insertion_point(global_scope)
